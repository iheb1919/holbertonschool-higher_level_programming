#!/usr/bin/python3
"""
"""

from models.rectangle import Rectangle

class Square(Rectangle):
    """
    """

    def __init__(self, size, x=0, y=0, id=None):
        super().__init__(size, size, x, y, id)
        self.size = size

    @property
    def size(self):
        """The getter function"""
        return self.width

    @size.setter
    def size(self, value):
        """The setter function for the size"""
        self.width = value
        self.height = value
    
    def __str__(self):
        """The overloading __str__ method """
        return "[Square] ({}) {}/{} - {}".format(self.id, self.x, self.y, self.width)
        
    def update(self, *args, **kwargs):
        if args:
            if (len(args) > 0):
                self.id = args[0]
            if (len(args) > 1):
                self.__size = args[1]
            if (len(args) > 2):
                self.__x = args[2]
            if (len(args) > 3):
                self.__y = args[3]
        for key, value in kwargs.items():
            if hasattr(self, key) is True:
                setattr(self,key,value)


    def to_dictionary(self):
        return {'id': self.id, 'size': self.size, 'x': self.x, 'y': self.y}
